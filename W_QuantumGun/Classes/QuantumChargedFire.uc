/*******************************************************************************
 * QuantumChargedFire generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class QuantumChargedFire extends ProjectileFire;

var() float MaxChargeTime;
var() Sound HoldSound;
//var QuantumWatcher QuantumWatcher;

event ModeDoFire()
{
    super(WeaponFire).ModeDoFire();
}

function DrawMuzzleFlash(Canvas Canvas)
{
    if(FlashEmitter != none)
    {
        FlashEmitter.SetRotation(Weapon.Rotation);
    }
    super(WeaponFire).DrawMuzzleFlash(Canvas);
}

function ModeHoldFire()
{
    if(Weapon.HasAmmo())
    {
        super(WeaponFire).ModeHoldFire();
        Weapon.PlaySound(HoldSound, SLOT_Interact, TransientSoundVolume,,,, false);
    }
}

function float MaxRange()
{
    return 1500.0;
}

function StopFiring()
{
    super(WeaponFire).StopFiring();
    Weapon.OutOfAmmo();
}

simulated function PlayFiring()
{
    super(WeaponFire).PlayFiring();
    if(FireCount > 0)
    {
        QuantumGun(Weapon).HideDummyProj();
    }
}

function Projectile SpawnProjectile(Vector Start, Rotator Dir)
{
    local QuantumProj Quantum;
    local Vector X, Y, Z;
    local float pawnSpeed;

    if(Bot(Instigator.Controller) != none)
    {
        Start.Z -= 20.0;
    }

    Quantum = Spawn(class'QuantumProj', Instigator,, Start, Dir);

    if(Quantum != none)
    {
        Weapon.GetViewAxes(X, Y, Z);
        pawnSpeed = X Dot Instigator.Velocity;

        Quantum.Speed = Lerp(FMin(HoldTime / MaxChargeTime, 1.0), Quantum.MinSpeed, Quantum.MaxSpeed);

        Quantum.Speed = pawnSpeed + Quantum.Speed;
        Quantum.Velocity = Quantum.Speed * vector(Dir);


    }
    return Quantum;
}

defaultproperties
{
    MaxChargeTime=3.0
    HoldSound=SoundQuantumSounds.Vortex.Vortex_altfire'
    ProjSpawnOffset=(X=20.0,Y=9.0,Z=-6.0)
    bTossed=true
    bFireOnRelease=true
    FireEndAnim=None
    FireSound=Sound'QuantumSounds.Vortex.Vortex_fire'
    FireForce="AssaultRifleAltFire"
    FireRate=1.50
    AmmoClass=class'QuantumAmmo'
    AmmoPerFire=1
    ShakeRotMag=(X=100.0,Y=0.0,Z=0.0)
    ShakeRotRate=(X=1000.0,Y=0.0,Z=0.0)
    ShakeRotTime=2.0
    ShakeOffsetMag=(X=-4.0,Y=0.0,Z=-4.0)
    ShakeOffsetRate=(X=1000.0,Y=0.0,Z=1000.0)
    ShakeOffsetTime=2.0
    ProjectileClass=class'QuantumProj'
    BotRefireRate=0.50
    WarnTargetPct=0.80
    aimerror=100.0
}
