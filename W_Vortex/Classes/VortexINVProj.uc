/*******************************************************************************
 * VortexINVProj generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class VortexINVProj extends VortexProj;

simulated function KillObject(Actor Other, float DistToCenter)
{
    // End:0x13E
    if((((((Pawn(Other) != none) && Other.Role == ROLE_Authority) && Pawn(Other).Health > 0) && !Pawn(Other).InGodMode()) && !HasRespawnProtection(Pawn(Other))) && Other.IsA('Monster') || Other == Instigator)
    {
        Other.TakeDamage(1000, Instigator, Other.Location, vect(0.0, 0.0, 0.0), MyDamageType);
        // End:0x11D
        if(Pawn(Other).Health > 0)
        {
            Pawn(Other).Died(InstigatorController, MyDamageType, Other.Location);
        }
        PlaySound(SlurpSound[Rand(SlurpSound.Length)], SLOT_Misc, 255.0,, 6000.0);
    }
    // End:0x193
    else
    {
        // End:0x15D
        if(Pickup(Other) != none)
        {
            Other.Destroy();
        }
        // End:0x193
        else
        {
            // End:0x193
            if(!Other.IsA('xPawn'))
            {
                Other.Touch(self);
                DamageObject(Other, DistToCenter);
            }
        }
    }
    //return;
}

simulated function DamageObject(Actor Other, float DistToCenter)
{
    // End:0x3E
    if((Other == none) || Other.IsA('Pawn') && Other.Role < ROLE_Authority)
    {
        return;
    }
    // End:0x116
    if(!Other.IsA('Pawn') || (((Pawn(Other).Health > 0) && !Pawn(Other).InGodMode()) && !HasRespawnProtection(Pawn(Other))) && Other.IsA('Monster') || Other == Instigator)
    {
        Other.TakeDamage(int(Damage * (float(1) - (DistToCenter / DamageRadius))), Instigator, Other.Location, vect(0.0, 0.0, 0.0), MyDamageType);
    }
    //return;
}
